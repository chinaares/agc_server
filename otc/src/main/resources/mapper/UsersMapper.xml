<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanjing.otc.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.lanjing.otc.model.Users">
    <!--@mbg.generated-->
    <id column="fId" jdbcType="INTEGER" property="fid" />
    <result column="keyes" jdbcType="VARCHAR" property="keyes" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="loginPassword" jdbcType="VARCHAR" property="loginpassword" />
    <result column="transPassword" jdbcType="VARCHAR" property="transpassword" />
    <result column="Nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="phoneNum" jdbcType="VARCHAR" property="phonenum" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="beginNodenum" jdbcType="DOUBLE" property="beginnodenum" />
    <result column="NodeNum" jdbcType="DECIMAL" property="nodenum" />
    <result column="IsNode" jdbcType="INTEGER" property="isnode" />
    <result column="Nodeadmin" jdbcType="VARCHAR" property="nodeadmin" />
    <result column="IsVip" jdbcType="INTEGER" property="isvip" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="IsNodetime" jdbcType="TIMESTAMP" property="isnodetime" />
    <result column="device" jdbcType="VARCHAR" property="device" />
    <result column="welletname" jdbcType="VARCHAR" property="welletname" />
    <result column="Isauto" jdbcType="INTEGER" property="isauto" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="ways" jdbcType="INTEGER" property="ways" />
    <result column="IsReal" jdbcType="INTEGER" property="isreal" />
    <result column="Realname" jdbcType="VARCHAR" property="realname" />
    <result column="IdentityId" jdbcType="VARCHAR" property="identityid" />
    <result column="IdentityImg1" jdbcType="VARCHAR" property="identityimg1" />
    <result column="IdentityImg2" jdbcType="VARCHAR" property="identityimg2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    fId, keyes, userName, loginPassword, transPassword, Nickname, picture, phoneNum, 
    token, beginNodenum, NodeNum, IsNode, Nodeadmin, IsVip, createtime, IsNodetime, device, 
    welletname, Isauto, `state`, ways, IsReal, Realname, IdentityId, IdentityImg1, IdentityImg2
  </sql>
  <select id="selectByExample" parameterType="com.lanjing.otc.model.UsersExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from users
    where fId = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from users
    where fId = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lanjing.otc.model.UsersExample">
    <!--@mbg.generated-->
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="fId" keyProperty="fid" parameterType="com.lanjing.otc.model.Users" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into users (keyes, userName, loginPassword, 
      transPassword, Nickname, picture, 
      phoneNum, token, beginNodenum, 
      NodeNum, IsNode, Nodeadmin, 
      IsVip, createtime, IsNodetime, 
      device, welletname, Isauto, 
      `state`, ways, IsReal, 
      Realname, IdentityId, IdentityImg1, 
      IdentityImg2)
    values (#{keyes,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{loginpassword,jdbcType=VARCHAR}, 
      #{transpassword,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, 
      #{phonenum,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{beginnodenum,jdbcType=DOUBLE}, 
      #{nodenum,jdbcType=DECIMAL}, #{isnode,jdbcType=INTEGER}, #{nodeadmin,jdbcType=VARCHAR}, 
      #{isvip,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{isnodetime,jdbcType=TIMESTAMP}, 
      #{device,jdbcType=VARCHAR}, #{welletname,jdbcType=VARCHAR}, #{isauto,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{ways,jdbcType=INTEGER}, #{isreal,jdbcType=INTEGER}, 
      #{realname,jdbcType=VARCHAR}, #{identityid,jdbcType=VARCHAR}, #{identityimg1,jdbcType=VARCHAR}, 
      #{identityimg2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="fId" keyProperty="fid" parameterType="com.lanjing.otc.model.Users" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="keyes != null">
        keyes,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="loginpassword != null">
        loginPassword,
      </if>
      <if test="transpassword != null">
        transPassword,
      </if>
      <if test="nickname != null">
        Nickname,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="phonenum != null">
        phoneNum,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="beginnodenum != null">
        beginNodenum,
      </if>
      <if test="nodenum != null">
        NodeNum,
      </if>
      <if test="isnode != null">
        IsNode,
      </if>
      <if test="nodeadmin != null">
        Nodeadmin,
      </if>
      <if test="isvip != null">
        IsVip,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="isnodetime != null">
        IsNodetime,
      </if>
      <if test="device != null">
        device,
      </if>
      <if test="welletname != null">
        welletname,
      </if>
      <if test="isauto != null">
        Isauto,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="ways != null">
        ways,
      </if>
      <if test="isreal != null">
        IsReal,
      </if>
      <if test="realname != null">
        Realname,
      </if>
      <if test="identityid != null">
        IdentityId,
      </if>
      <if test="identityimg1 != null">
        IdentityImg1,
      </if>
      <if test="identityimg2 != null">
        IdentityImg2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="keyes != null">
        #{keyes,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginpassword != null">
        #{loginpassword,jdbcType=VARCHAR},
      </if>
      <if test="transpassword != null">
        #{transpassword,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="beginnodenum != null">
        #{beginnodenum,jdbcType=DOUBLE},
      </if>
      <if test="nodenum != null">
        #{nodenum,jdbcType=DECIMAL},
      </if>
      <if test="isnode != null">
        #{isnode,jdbcType=INTEGER},
      </if>
      <if test="nodeadmin != null">
        #{nodeadmin,jdbcType=VARCHAR},
      </if>
      <if test="isvip != null">
        #{isvip,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isnodetime != null">
        #{isnodetime,jdbcType=TIMESTAMP},
      </if>
      <if test="device != null">
        #{device,jdbcType=VARCHAR},
      </if>
      <if test="welletname != null">
        #{welletname,jdbcType=VARCHAR},
      </if>
      <if test="isauto != null">
        #{isauto,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="ways != null">
        #{ways,jdbcType=INTEGER},
      </if>
      <if test="isreal != null">
        #{isreal,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="identityid != null">
        #{identityid,jdbcType=VARCHAR},
      </if>
      <if test="identityimg1 != null">
        #{identityimg1,jdbcType=VARCHAR},
      </if>
      <if test="identityimg2 != null">
        #{identityimg2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lanjing.otc.model.UsersExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update users
    <set>
      <if test="record.fid != null">
        fId = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.keyes != null">
        keyes = #{record.keyes,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.loginpassword != null">
        loginPassword = #{record.loginpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.transpassword != null">
        transPassword = #{record.transpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        Nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenum != null">
        phoneNum = #{record.phonenum,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.beginnodenum != null">
        beginNodenum = #{record.beginnodenum,jdbcType=DOUBLE},
      </if>
      <if test="record.nodenum != null">
        NodeNum = #{record.nodenum,jdbcType=DECIMAL},
      </if>
      <if test="record.isnode != null">
        IsNode = #{record.isnode,jdbcType=INTEGER},
      </if>
      <if test="record.nodeadmin != null">
        Nodeadmin = #{record.nodeadmin,jdbcType=VARCHAR},
      </if>
      <if test="record.isvip != null">
        IsVip = #{record.isvip,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isnodetime != null">
        IsNodetime = #{record.isnodetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.device != null">
        device = #{record.device,jdbcType=VARCHAR},
      </if>
      <if test="record.welletname != null">
        welletname = #{record.welletname,jdbcType=VARCHAR},
      </if>
      <if test="record.isauto != null">
        Isauto = #{record.isauto,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.ways != null">
        ways = #{record.ways,jdbcType=INTEGER},
      </if>
      <if test="record.isreal != null">
        IsReal = #{record.isreal,jdbcType=INTEGER},
      </if>
      <if test="record.realname != null">
        Realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.identityid != null">
        IdentityId = #{record.identityid,jdbcType=VARCHAR},
      </if>
      <if test="record.identityimg1 != null">
        IdentityImg1 = #{record.identityimg1,jdbcType=VARCHAR},
      </if>
      <if test="record.identityimg2 != null">
        IdentityImg2 = #{record.identityimg2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update users
    set fId = #{record.fid,jdbcType=INTEGER},
      keyes = #{record.keyes,jdbcType=VARCHAR},
      userName = #{record.username,jdbcType=VARCHAR},
      loginPassword = #{record.loginpassword,jdbcType=VARCHAR},
      transPassword = #{record.transpassword,jdbcType=VARCHAR},
      Nickname = #{record.nickname,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      phoneNum = #{record.phonenum,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR},
      beginNodenum = #{record.beginnodenum,jdbcType=DOUBLE},
      NodeNum = #{record.nodenum,jdbcType=DECIMAL},
      IsNode = #{record.isnode,jdbcType=INTEGER},
      Nodeadmin = #{record.nodeadmin,jdbcType=VARCHAR},
      IsVip = #{record.isvip,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      IsNodetime = #{record.isnodetime,jdbcType=TIMESTAMP},
      device = #{record.device,jdbcType=VARCHAR},
      welletname = #{record.welletname,jdbcType=VARCHAR},
      Isauto = #{record.isauto,jdbcType=INTEGER},
      `state` = #{record.state,jdbcType=INTEGER},
      ways = #{record.ways,jdbcType=INTEGER},
      IsReal = #{record.isreal,jdbcType=INTEGER},
      Realname = #{record.realname,jdbcType=VARCHAR},
      IdentityId = #{record.identityid,jdbcType=VARCHAR},
      IdentityImg1 = #{record.identityimg1,jdbcType=VARCHAR},
      IdentityImg2 = #{record.identityimg2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lanjing.otc.model.Users">
    <!--@mbg.generated-->
    update users
    <set>
      <if test="keyes != null">
        keyes = #{keyes,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginpassword != null">
        loginPassword = #{loginpassword,jdbcType=VARCHAR},
      </if>
      <if test="transpassword != null">
        transPassword = #{transpassword,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        Nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        phoneNum = #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="beginnodenum != null">
        beginNodenum = #{beginnodenum,jdbcType=DOUBLE},
      </if>
      <if test="nodenum != null">
        NodeNum = #{nodenum,jdbcType=DECIMAL},
      </if>
      <if test="isnode != null">
        IsNode = #{isnode,jdbcType=INTEGER},
      </if>
      <if test="nodeadmin != null">
        Nodeadmin = #{nodeadmin,jdbcType=VARCHAR},
      </if>
      <if test="isvip != null">
        IsVip = #{isvip,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isnodetime != null">
        IsNodetime = #{isnodetime,jdbcType=TIMESTAMP},
      </if>
      <if test="device != null">
        device = #{device,jdbcType=VARCHAR},
      </if>
      <if test="welletname != null">
        welletname = #{welletname,jdbcType=VARCHAR},
      </if>
      <if test="isauto != null">
        Isauto = #{isauto,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="ways != null">
        ways = #{ways,jdbcType=INTEGER},
      </if>
      <if test="isreal != null">
        IsReal = #{isreal,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        Realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="identityid != null">
        IdentityId = #{identityid,jdbcType=VARCHAR},
      </if>
      <if test="identityimg1 != null">
        IdentityImg1 = #{identityimg1,jdbcType=VARCHAR},
      </if>
      <if test="identityimg2 != null">
        IdentityImg2 = #{identityimg2,jdbcType=VARCHAR},
      </if>
    </set>
    where fId = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanjing.otc.model.Users">
    <!--@mbg.generated-->
    update users
    set keyes = #{keyes,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      loginPassword = #{loginpassword,jdbcType=VARCHAR},
      transPassword = #{transpassword,jdbcType=VARCHAR},
      Nickname = #{nickname,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      phoneNum = #{phonenum,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      beginNodenum = #{beginnodenum,jdbcType=DOUBLE},
      NodeNum = #{nodenum,jdbcType=DECIMAL},
      IsNode = #{isnode,jdbcType=INTEGER},
      Nodeadmin = #{nodeadmin,jdbcType=VARCHAR},
      IsVip = #{isvip,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      IsNodetime = #{isnodetime,jdbcType=TIMESTAMP},
      device = #{device,jdbcType=VARCHAR},
      welletname = #{welletname,jdbcType=VARCHAR},
      Isauto = #{isauto,jdbcType=INTEGER},
      `state` = #{state,jdbcType=INTEGER},
      ways = #{ways,jdbcType=INTEGER},
      IsReal = #{isreal,jdbcType=INTEGER},
      Realname = #{realname,jdbcType=VARCHAR},
      IdentityId = #{identityid,jdbcType=VARCHAR},
      IdentityImg1 = #{identityimg1,jdbcType=VARCHAR},
      IdentityImg2 = #{identityimg2,jdbcType=VARCHAR}
    where fId = #{fid,jdbcType=INTEGER}
  </update>
</mapper>