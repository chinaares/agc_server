<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanjing.otc.dao.ParametersMapper">
  <resultMap id="BaseResultMap" type="com.lanjing.otc.model.Parameters">
    <!--@mbg.generated-->
    <id column="fId" jdbcType="INTEGER" property="id" />
    <result column="keyname" jdbcType="VARCHAR" property="keyName" />
    <result column="keyvalue" jdbcType="VARCHAR" property="keyValue" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    fId, keyname, keyvalue, remark, `type`
  </sql>
  <select id="selectByExample" parameterType="com.lanjing.otc.model.ParametersExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from parameters
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from parameters
    where fId = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from parameters
    where fId = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lanjing.otc.model.ParametersExample">
    <!--@mbg.generated-->
    delete from parameters
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="fId" keyProperty="id" parameterType="com.lanjing.otc.model.Parameters" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into parameters (keyname, keyvalue, remark, 
      `type`)
    values (#{keyName,jdbcType=VARCHAR}, #{keyValue,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="fId" keyProperty="id" parameterType="com.lanjing.otc.model.Parameters" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into parameters
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="keyName != null">
        keyname,
      </if>
      <if test="keyValue != null">
        keyvalue,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="type != null">
        `type`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="keyName != null">
        #{keyName,jdbcType=VARCHAR},
      </if>
      <if test="keyValue != null">
        #{keyValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lanjing.otc.model.ParametersExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from parameters
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update parameters
    <set>
      <if test="record.id != null">
        fId = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.keyName != null">
        keyname = #{record.keyName,jdbcType=VARCHAR},
      </if>
      <if test="record.keyValue != null">
        keyvalue = #{record.keyValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update parameters
    set fId = #{record.id,jdbcType=INTEGER},
      keyname = #{record.keyName,jdbcType=VARCHAR},
      keyvalue = #{record.keyValue,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR},
      `type` = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lanjing.otc.model.Parameters">
    <!--@mbg.generated-->
    update parameters
    <set>
      <if test="keyName != null">
        keyname = #{keyName,jdbcType=VARCHAR},
      </if>
      <if test="keyValue != null">
        keyvalue = #{keyValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where fId = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanjing.otc.model.Parameters">
    <!--@mbg.generated-->
    update parameters
    set keyname = #{keyName,jdbcType=VARCHAR},
      keyvalue = #{keyValue,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR},
      `type` = #{type,jdbcType=INTEGER}
    where fId = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from parameters
    where keyname = #{keyname,jdbcType=VARCHAR}
  </select>
</mapper>