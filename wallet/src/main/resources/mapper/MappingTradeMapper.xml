<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lanjing.wallet.dao.MappingTradeMapper" >
  <resultMap id="BaseResultMap" type="com.lanjing.wallet.model.MappingTrade" >
    <id column="fId" property="fid" jdbcType="INTEGER" />
    <result column="fuser" property="fuser" jdbcType="VARCHAR" />
    <result column="coinId" property="coinid" jdbcType="INTEGER" />
    <result column="cointype" property="cointype" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="coinNum" property="coinnum" jdbcType="DECIMAL" />
    <result column="rest" property="rest" jdbcType="DECIMAL" />
    <result column="tradeNum" property="tradenum" jdbcType="DECIMAL" />
    <result column="fee" property="fee" jdbcType="DECIMAL" />
    <result column="releaseNum" property="releasenum" jdbcType="DECIMAL" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="Isreal" property="isreal" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    fId, fuser, coinId, cointype, type, price, coinNum, rest, tradeNum, fee, releaseNum,
    createtime, updatetime, state, Isreal
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mappingtradelist
    where fId = #{fid,jdbcType=INTEGER}
  </select>



  <select id="selectByType" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from mappingtradelist
    where type = #{type,jdbcType=INTEGER} and coinId = 1
  </select>

  <select id="selectByType1" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from mappingtradelist
    where type = #{type,jdbcType=INTEGER} and coinId = 1 and state = 1
  </select>


  <select id="selectAll" resultType="Map">
    select
    mt.*,u.userName
    from mappingtradelist mt LEFT JOIN users u on mt.fuser = u.keyes
    where coinId = 1
    <if test="likes != null">
      and (userName like '%${likes}%' or fuser like '%${likes}%')
    </if>
    <if test="type != null" >
      and type = #{type,jdbcType=INTEGER}
    </if>
    <if test="state != null">
      and  mt.state = #{state,jdbcType=INTEGER}
    </if>
    <if test="Isreal != null">
      and Isreal = #{Isreal,jdbcType=INTEGER}
    </if>
    <if test="createtime != null">
      and createtime <![CDATA[ >= ]]> #{createtime}
    </if>
    <if test="updatetime != null">
      and updatetime <![CDATA[ >= ]]> #{updatetime}
    </if> order by createtime desc
    limit #{begin,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
  </select>

  <select id="selectAllCount" resultType="java.lang.Integer">
    select
    count(*)
    from mappingtradelist mt LEFT JOIN users u on mt.fuser = u.keyes
    where coinId = 1
    <if test="likes != null">
      and (userName like '%${likes}%' or fuser like '%${likes}%')
    </if>
    <if test="type != null" >
      and type = #{type,jdbcType=INTEGER}
    </if>
    <if test="state != null">
      and  mt.state = #{state,jdbcType=INTEGER}
    </if>
    <if test="Isreal != null">
      and Isreal = #{Isreal,jdbcType=INTEGER}
    </if>
    <if test="createtime != null">
      and createtime <![CDATA[ >= ]]> #{createtime}
    </if>
    <if test="updatetime != null">
      and updatetime <![CDATA[ >= ]]> #{updatetime}
    </if>
  </select>


  <select id="selectBy" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from mappingtradelist
    where 1 = 1
    <if test="record.fuser != null" >
      and fuser = #{record.fuser,jdbcType=VARCHAR}
    </if>
    <if test="record.coinid != null" >
      and coinId = #{record.coinid,jdbcType=INTEGER}
    </if>
    <if test="record.cointype != null" >
      and cointype = #{record.cointype,jdbcType=VARCHAR}
    </if>
    <if test="record.type != null" >
      and type = #{record.type,jdbcType=INTEGER}
    </if>
    <if test="record.price != null" >
      and price = #{record.price,jdbcType=DECIMAL}
    </if>
    <if test="record.coinnum != null" >
      and coinNum = #{record.coinnum,jdbcType=DECIMAL}
    </if>
    <if test="record.rest != null" >
      and rest = #{record.rest,jdbcType=DECIMAL}
    </if>
    <if test="record.tradenum != null" >
      and tradeNum = #{record.tradenum,jdbcType=DECIMAL}
    </if>
    <if test="record.createtime != null" >
      and createtime = #{record.createtime,jdbcType=TIMESTAMP}
    </if>
    <if test="record.updatetime != null" >
      and updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    </if>
    <choose>
      <when test="record.state != null">
        and state = #{record.state,jdbcType=INTEGER}
      </when>
      <otherwise>
        and (state = 2 or state = 4)
      </otherwise>
    </choose>
    order by updatetime desc
     limit #{begin,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
  </select>


  <select id="selectByUserKey" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from mappingtradelist
    where coinId = #{symbol,jdbcType=INTEGER} and fuser = #{user,jdbcType=VARCHAR}  order by updatetime desc  limit #{begin,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mappingtradelist
    where fId = #{fid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lanjing.wallet.model.MappingTrade" >
    insert into mappingtradelist (fId, fuser, coinId, 
      cointype, type, price, 
      coinNum, rest, tradeNum, 
      createtime, updatetime, state
      )
    values (#{fid,jdbcType=INTEGER}, #{fuser,jdbcType=VARCHAR}, #{coinid,jdbcType=INTEGER}, 
      #{cointype,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, 
      #{coinnum,jdbcType=DECIMAL}, #{rest,jdbcType=DECIMAL}, #{tradenum,jdbcType=DECIMAL}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lanjing.wallet.model.MappingTrade" >
    insert into mappingtradelist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        fId,
      </if>
      <if test="fuser != null" >
        fuser,
      </if>
      <if test="coinid != null" >
        coinId,
      </if>
      <if test="cointype != null" >
        cointype,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="coinnum != null" >
        coinNum,
      </if>
      <if test="rest != null" >
        rest,
      </if>
      <if test="tradenum != null" >
        tradeNum,
      </if>
      <if test="fee != null" >
        fee,
      </if>
      <if test="releasenum != null" >
        releaseNum,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="isreal != null" >
        Isreal,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="fuser != null" >
        #{fuser,jdbcType=VARCHAR},
      </if>
      <if test="coinid != null" >
        #{coinid,jdbcType=INTEGER},
      </if>
      <if test="cointype != null" >
        #{cointype,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="coinnum != null" >
        #{coinnum,jdbcType=DECIMAL},
      </if>
      <if test="rest != null" >
        #{rest,jdbcType=DECIMAL},
      </if>
      <if test="tradenum != null" >
        #{tradenum,jdbcType=DECIMAL},
      </if>
      <if test="fee != null" >
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="releasenum != null" >
        #{releasenum,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="isreal != null" >
        #{isreal,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lanjing.wallet.model.MappingTrade" >
    update mappingtradelist
    <set >
      <if test="fuser != null" >
        fuser = #{fuser,jdbcType=VARCHAR},
      </if>
      <if test="coinid != null" >
        coinId = #{coinid,jdbcType=INTEGER},
      </if>
      <if test="cointype != null" >
        cointype = #{cointype,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="coinnum != null" >
        coinNum = #{coinnum,jdbcType=DECIMAL},
      </if>
      <if test="rest != null" >
        rest = #{rest,jdbcType=DECIMAL},
      </if>
      <if test="tradenum != null" >
        tradeNum = #{tradenum,jdbcType=DECIMAL},
      </if>
      <if test="fee != null" >
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="releasenum != null" >
        releaseNum = #{releasenum,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="isreal != null" >
        Isreal = #{isreal,jdbcType=INTEGER},
      </if>
    </set>
    where fId = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanjing.wallet.model.MappingTrade" >
    update mappingtradelist
    set fuser = #{fuser,jdbcType=VARCHAR},
      coinId = #{coinid,jdbcType=INTEGER},
      cointype = #{cointype,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      coinNum = #{coinnum,jdbcType=DECIMAL},
      rest = #{rest,jdbcType=DECIMAL},
      tradeNum = #{tradenum,jdbcType=DECIMAL},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where fId = #{fid,jdbcType=INTEGER}
  </update>
</mapper>